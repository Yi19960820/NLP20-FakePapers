Recently, using imitation learning to drive end-to-end caught researchers' attention again. Like human beings, imitation learning uses image as the input and the outputs are usually the steering wheel angle, acceleration and deceleration value. End-to-end driving means the model learns how to drive from expert's demonstration and it has been successfully applied to lane following _cite_ and off-road obstacle avoidance _cite_ . The paper _cite_ pointed out that using only image as the input is not enough to decide whether the vehicle should turn left or right, or go straight when reaching an intersection and proposed a method which is based on conditional imitation learning and use navigation command to handle this issue. It is useful to think about what fators an end-to-end drving system should take into account. We analyse this problem from several points. First of all, navigation command is necessary for an end-to-end driving system to drive along the given path _cite_ . Besides, from the perspective of human drivers, we know it is helpful to figure out what kinds of objects in front of the ego-vehicle. Xu et al. _cite_ proved that FCN (fully convolutional network) _cite_ with privilege learning can boost the performance of the driving model. Furthermore, human drivers drive the car with attention. For example, when a human driver notices that the traffic light turns red, he will stop even though there are not vehicles or pedestrians ahead of the ego-vehicle. Xu et al. _cite_ also demonstrate that segmentation information can make the model pay attention to the right objects. However, when the car reaches an intersection, segmentation information may not be enough to let the car focus on right objects because the model can not decide where to see and where to go at this time without navigation command. Intuitively, branched architecture with navigation command, which means that different parts in the model process different navigation situations, may help. Moreover, human drivers can drive correctly because they can not only recognize what class the front object is but also infer the distance between the vehicle and the object. Inspired from the factors, we also use depth images and segmentation images as the input of the model and find that it can boost the driving performance. Moreover, autonoumous driving systems should be able to follow other vehicles. Intuitively, using sequential images instead of single image as the input may have such effect. Previous researches _cite_ demonstrate that LSTM (long short term memory) _cite_ can promote the driving performance. Finally, other information such as speed is also needed in an end-to-end driving system especially when the speed limit is considered. Our task settings in this paper are a bit different comparing with task in _cite_ . We consider the traffic light, other vehicles and the pedestrians but ignore the speed limit. Model's outputs include the steer angle and the throttle of the vehicle. We treat the throttle as a binary classification problem which means that the vehicle either stops or drives in a constant speed. Our contributions are as follows: Firstly, we propose a new navigation command which is called as subgoal angle. To construct it, we divide a path into many uniform discrete points which are called as subgoal points. When driving along the path, what the vehicle's current subgoal is depends on where the vehicle travels along the path. Then we use car's current position and current subgoal to calculate subgoal angle which is shown in Fig ~ _ref_ . Section _ref_ give a detailed description of the subgoal angle. Secondly, in Section _ref_, we demonstrate a novel model architecture using branched structure. In such architecture, neural network is used as the function approximator. The input of the model includes images from a single front-facing camera, car's current speed and our navigation command. The output of the model is the steering angle and the throttle. The navigation command plays two roles in our model. One is to act as detail information to better construct features for infering outputs, and the other is used as high level command to decide which branch of the output network to process features. Thirdly, we find that depth information also has great influence on reducing the ego-vehicle's collision with other vehicles and pedestrians, which is really important in real world's application. This is illustrated in Section _ref_ .