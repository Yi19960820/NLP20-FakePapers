Current methods of authenticating users on mobile devices are mostly PIN or pattern based, which provides authentication only during the initial login. Password-based methods are susceptible, because people sometimes set passwords that are easy to guess or are repetitive _cite_ and pattern-based systems are vulnerable to smudge attacks _cite_ . Once the attacker successfully bypasses the initial authentication barrier, the phone has no way of blocking or denying the attacker. Continuous authentication systems deal with this issue by continuously monitoring the user identity after the initial access to the mobile device based on how the user interacts with the mobile device. Examples of such systems include touch gesture-based systems _cite_, _cite_, _cite_, face-based systems _cite_, _cite_, _cite_, gait-based systems _cite_, stylometry-based methods _cite_, speech and face-based method _cite_ _cite_ and sensor-based methods _cite_, _cite_ . It has been shown that face-based recognition can be very effective for continuous authentication _cite_, _cite_, _cite_, _cite_ . Face detection is a very important step in face-based authentication systems. There has been substantial progress in detecting faces in images, which have impressive performances on challenging real-world databases _cite_ . But such databases are predominantly composed of general surveillance or media type images and not specifically of images captured using front-facing cameras of smartphones. As we shall discuss later, face images captured using the front-facing cameras of mobile devices possess some unique features that can be used as powerful prior information to simplify the task of face detection on mobile platforms. This paper proposes a deep convolutional neural network (DCNN)-based face detection scheme for mobile platforms. State of the art face detection techniques are based on DCNNs _cite_, _cite_ . Variations of DCNNs have been shown to perform well in various datasets like Face Detection Dataset and Benchmark (FDDB) _cite_ and Annotated Face in-the-Wild (AFW) _cite_ . Though DCNN-based methods can run on serial processors like CPUs, they are prohibitively slow without parallel processors like GPUs. Mobile devices and consumer electronics products like cameras often have in-built face detection systems, but since they do not have much computational horsepower, simpler detection algorithms are implemented on them, which do not have as high a performance as DCNN-based methods but can run on low power mobile platforms. Thus, there is a tradeoff between high performance and hardware and power constraints. This paper seeks to reconcile the two competing objectives and studies the feasibility and effectiveness of DCNN-based face detection methods in mobile platforms. Clearly, the most powerful DCNN-based face detectors that are designed to run on desktop environments will not be a good candidate for a DCNN-based detector for mobile platforms. Below are a few differences between the two tasks. This paper makes the following contributions: Rest of the paper is organized as follows. We first survey related works that have influenced the current algorithm and discuss their advantages and disadvantages. Section~ _ref_ introduces the algorithm in full details and ends with a discussion on the salient features of the algorithm. Section~ _ref_ explores the details of the actual implementation of the algorithm on a mobile platform. Section~ _ref_ presents evaluation results of the algorithm on two datasets, UMD-AA and MOBIO. Finally we draw some conclusions about the algorithm and suggest some future directions. Cascade classifiers form an important and influential family of face detectors. Viola-Jones detector _cite_ is a classic method, which provides realtime face detection, but works best for full, frontal, and well lit faces. Extending the work of cascade classifiers, some authors _cite_ have trained multiple models to address pose variations. An extensive survey of such methods can be found in _cite_ . Modeling of the face by parts is another popular approach. Zhu _cite_ proposed a deformable parts model that detected faces by identifying face parts and modeling the whole face as a collection of face parts joined together using \textquotesingle springs \textquotesingle . The springs like constraints were useful in modeling deformations, hence this method is somewhat robust to pose and expression changes. As mentioned before, current state-of-the-art methods involve deep networks, which have been extensively adopted and studied both by the academic community and industry. Current face detectors at commercial companies like Google and Facebook use massive datasets to train very deep and complex networks that work well on unconstrained datasets, but they require huge training datasets and powerful hardware to run. Recent studies have shown that in the absence of massive datasets or hardware infrastructure, transfer learning can be effective as it allows one to introduce deep networks without having to train it from scratch. This is possible as lower layers of deep networks can be viewed as feature extractors, while higher layers can be tuned to the task at hand. Therefore, one can use the lower layers of common deep networks like AlexNet _cite_ to extract general features, that can then be used to train other classifiers. Works of Bengio _cite_ have studied how transfer learning works for deep networks. Specific to the mobile platform, Hadid _cite_ have demonstrated a local binary pattern (LBP)-based method on a Nokia NN phone. Though it is fast, it is not a robust method and was designed for an older phone. Current phones have more powerful CPUs and more importantly, even GPUs, which can implement DCNNs. Finally, let us consider the datasets used for mobile face detection. While there are many face databases available, they are not suitable for evaluating mobile face detection algorithms. MOBIO is a publicly available mobile dataset _cite_ which consists of bi-modal (audio and video) data taken from N people, but it is a very constrained one as users are asked to keep their faces within a certain region, so that full faces are captured. A more suitable dataset for our purpose is the semi-constrained UMD-AA dataset _cite_, which shall be described in a later section.