Multi-target tracking is an active area of research in computer vision, driven in part by the desire to build autonomous systems that can navigate in crowded urban environments (see e.g., _cite_) . Thanks to advances of object detector performance in single, static images, ``tracking-by-detection'' approaches that build tracks on top of a collection of candidate object detections have shown great promise. Tracking-by-detection avoids some problems such as drift and is often able to recover from extended periods of occlusion since it is ``self-initializing''. Finding an optimal set of detections corresponding to each track can often be formulated as a discrete optimization problem of selecting a set of low-cost paths through a graph of candidate detections for which there are efficient combinatorial algorithms (such as min-cost matching or min-cost network-flow) that yield globally optimal solutions (_cite_) . Tracking by detection differs from traditional generative formulations of multi-target tracking, which draw a distinction between the problem of estimating a latent continuous trajectory for each object from the discrete per-frame data association problem of assigning observations (\eg, detections) to underlying tracks. Such methods (e.g., _cite_) allow for explicitly specifying an intuitive model of trajectory smoothness but face a difficult joint inference problem over both continuous and discrete variables which can seldom be solved with any guarantee of optimality. In tracking by detection, trajectories are implicitly defined by the selected group of detections associated with a track. For example, a track may skip over some frames entirely due to occlusions or missing detections. The transition cost of utilizing a given edge between detections in successive frames thus could be interpreted as some approximation of the marginal likelihood associated with integrating over a set of underlying continuous trajectories associated with the corresponding pair of detections. This viewpoint immediately raises difficulties, both in (N) encoding strong trajectory models with only pairwise potentials and (N) identifying the parameters of these potentials from training data. The contribution of this paper is in demonstrating that carefully optimizing the parameters of relatively simple combinatorial tracking-by-detection models can yield state-of-the-art performance on difficult tracking benchmarks. Building on our preliminary work (_cite_), we introduce a simple multi-target, multi-category tracking model that extends min-cost flow with quadratic interactions between tracks in order to capture contextual interactions within a frame. To perform inference, we propose a family of greedy-dynamic programming algorithms that produce high-quality solutions on par with linear programming relaxations of the quadratic tracking objective while being substantially faster than a general purpose LP solver. For learning, we use a structured prediction SVM~ (_cite_) to optimize the complete set of tracking parameters from labeled training data. Structured prediction has been applied in tracking to learning inter-frame affinity metrics~ (_cite_) and association~ (_cite_) as well as a variety of other learning tasks such as fitting CRF parameters for segmentation~ (_cite_) and word alignment for machine translation~ (_cite_) . The structure of the remainder of the paper is as follows. We provide a brief overview of recent related work in Section _ref_ and review the now classical network-flow model for multi-target tracking in Section _ref_ before introducing our quadratic interaction model. In Section _ref_ we describe inference algorithms for network-flow models with quadratic interactions, namely, a standard LP-relaxation and rounding method, and a family of novel greedy dynamic programming algorithms that can handle quadratic interactions. In Section _ref_ we describe the features we used for learning tracking potentials in network-flow model with quadratic costs. In Section _ref_ we describe an approach to joint learning of model parameters in order to maximize tracking performance on a training data set using techniques for structured prediction. We conclude with experimental results (Section _ref_) which demonstrate that with properly learned parameters, even the basic network-flow yields better results than many state-of-the-art methods on challenging MOT and KITTI benchmarks. We also find that quadratic terms offer further improvements in performance for multi-category object tracking.