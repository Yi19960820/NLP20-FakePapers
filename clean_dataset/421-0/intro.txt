Visual Data, in the form of images, videos and live streams, has been growing at an unprecedented rate in the last few years. While this massive amount data is a blessing for Data Science, as it helps in improving the predictive accuracy, it is also a curse since humans are unable to consume this large amount of data. Moreover, today, machine-generated videos (via Drones, Dash-cams, Body-cams, Surveillance cameras etc.) are being generated at a rate higher than what we as humans can process. Among machine-generated videos, surveillance videos are one of the largest contributors to this growth. Surveillance cameras are deployed in several verticals, including office facilities, road intersections for traffic monitoring, ATMs and Banks, Hospitals, Manufacturing Facilities, Industrial Plants, Construction Sites, Educational Institutions, Retail stores and Malls, Hotels and Restaurants etc. Each of these verticals have their own unique video analytics applications. In most scenarios, video analytics is used for security purposes (detecting loitering and intrusion, asset tampering, suspicious activity or object detection) . In other scenarios, video analytics is used for process compliance, e.g. if an event in a manufacturing plant has happened on time, or whether it was done as desired. In retail scenarios and hotels, the information from video analytics is used for getting insights in customer pattern (e.g. heat-map, flow-map, counts, dwell-times etc.) While all these applications sound very different, the analytics building blocks are the same. Figure~ _ref_ demonstrates the process clearly. The analytics engine consists of several building blocks, including object detection, tracking, face and human detection, human and face sub-attribute recognition, vehicle detection and vehicle sub-attribute recognition etc. The information from the analytics engine is then passed on to a business logic layer, which applies rules based on the analytics output. For example, using human detection (localizing where a human is in the video frame) if a human enters a demarcated area, it sends out a real-time alert. Similarly, by tracking the paths of the human in the video, we can compute the heat-map and flow-map of human movement. The following sections outline the advancement of deep learning in computer vision, followed by the recent advances and challenges of video analytics for surveillance applications. Finally, we outline the main contributions of this paper. Current approaches to all but a few Computer Vision tasks involve the use of Deep Convolutional Neural Networks (CNNs) . CNNs generated a lot of interest after the successful performance of AlexNet~ _cite_ in the ImageNet Large Scale Visual Recognition Challenge (ILSVRC) N competition~ _cite_ . Following its triumph, there was an upsurge in the number of deep CNN models that were being used across the Computer Vision community. The winner of ILSVRC N was the even deeper GoogLeNet, which was the first CNN model to have a fundamentally different architecture than AlexNet. It was followed by ResNet~ _cite_, the winner of ILSVRC N, which was an astonishing N layers deep. It won the competition by achieving an error rate of N \%, beating humans at the image classification task. Similarly, for Object Detection tasks, there has been a significant advancement in the use of CNNs in the last lustrum. It started with the introduction of the Region based family of networks~ _cite_ . Recently, the Single Pass family of networks, consisting of YOLO and Tiny Yolo~ _cite_, along with the Single Shot MultiBox Detector (SSD) ~ _cite_ have emerged as the state-of-the-art models in object detection. Their extremely fast inference times allow for object detection to take place in real-time, thus broadening the areas of application where Deep Learning can be used for vision tasks. While there has been a remarkable improvement in the performance of Object Detection models for real-time tasks, an important role is still played by Object Tracking algorithms. Tracking algorithms are much faster than detection algorithms and help preserve the identity of an object being tracked when detection fails. Object Tracking is highly dependent on the quality of object detections. With good detections, the performance of a simple tracking algorithm increases drastically. State-of-the-art face recognition techniques such as DeepFace~ _cite_ and Deep Face Recognition~ _cite_ both consist of CNNs. Some of the highest results on the 'Labeled Faces in the Wild' (LFW) dataset~ _cite_ have been achieved by supervised CNNs~ _cite_ . Recently, a ResNet based face embeddings model has been proposed by~ ~ _cite_ . In almost all comparisons, deep face recognition models have outperformed older hand-crafted face embedding models. A lot of research has gone into video analytics systems for security and surveillance applications. Over the past two decades, video analytics companies have been providing solutions and products for video analytics in several domains. ~ ~ _cite_ and~ ~ _cite_ provide a good summary of the technology, problems, as well as the companies which are building analytics products in this space. Most surveillance cameras have a fixed angle of view, and for this reason, video analytics on these surveillance cameras are slightly easier than other forms of video analytics on moving cameras. Many video analytics problems can therefore be solved by background subtraction algorithms, which essentially use motion information to generate contours and motion blobs. ~ ~ _cite_ provide a very comprehensive survey of background subtraction algorithms for motion analytics. These algorithms work well in low traffic situations, and where one wants high sensitive alerts for problems like intrusion detection, motion detection and asset tampering. However, background subtraction algorithms are mostly unsupervised algorithms and are not trained to specifically detect humans or other objects of interest. As a result, they cannot distinguish between motion caused by shadows or leaf movements, viz-a-viz a human or animal intrusion, and often generate a lot of false alarms. However, background subtraction algorithms are extremely fast and scale very well in embedded applications. Due to privacy and bandwidth issues, it is often not feasible and prohibitively costly to deploy video analytics solutions on the cloud. As a result, it is essential to develop resource constrained video analytics solutions which can be deployed on premise. Deep learning has dominated the landscape of computer vision for the past few years, and almost all video analytics applications can be solved with high accuracies via deep learning. However, deep learning algorithms are resource hungry and require expensive GPU cloud servers to deploy. Given this, developing resource constrained, locally deployable and embedded deep learning solutions is critical. Several very recent advances like the MobileNet family of models~ _cite_, X-NOR networks~ _cite_ and Tiny-YOLO~ _cite_ have enabled deployment of resource constrained on embedded devices. The following are the main contributions of this paper: To our knowledge, this paper provides the first comprehensive evaluation of various computer vision tasks such as object detection and localization, face detection and face recognition, face and human sub-attribute recognition etc. In each case, we provide comprehensive evaluation of deep learning models on real-world customer data and deployment scenarios.