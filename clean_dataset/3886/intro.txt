In this work, we describe our solution for the IEEE's Signal Processing Society-Camera Model Identification Challenge hosted by Kaggle.com. Our team ranked the second place out of N teams in the task to create an algorithm that identifies the type of the camera that was used to capture an image. In general, the camera detection algorithm enables to solve many problems in forensics, such as identifies the owner of illegal or controversial materials (pedo-pornographic shots, terrorist act scenes, images that do not respect privacy laws, etc.), as well as helping to claim the intellectual property. There are two main ways to identify the type of camera. The first one uses metadata (e.g., EXIF tag) that keeps information about the type of the camera, and parameters used when the image was captured. The problem with this approach is that it is very unreliable since metadata can be easily manipulated or is unavailable if an image was re-saved or re-compressed. The second approach based on the low-level features that are camera model specific and originate from processing steps carried within a camera. Every camera maker develops a set of sophisticated, non-linear algorithms that are applied to the raw image before saving it to the memory card. Examples include demosaicing, noise filtering, fixing lens distortion, etc. Several camera identification algorithms were proposed in the literature, each trying to extract features related to different post-processing techniques. Some of them aim to extract features that are trying to exploit some apriori knowledge about imaging model, noise characteristics, demosaicing strategies, lens distortion, histogram strategies, etc. The others capture the statistical image properties and feed them to the machine learning classifiers. All of these approaches are not scalable in a sense that adding a new model of the camera will take a much manual effort to define the ways of feature extraction designated to track the traces. In recent years, solutions based on Deep Learning techniques became mainstream in computer vision. Problems in satellite _cite_, medical _cite_ or any other imagery are successfully tackled with these techniques, routinely beating human performance in many tasks, including classification, segmentation, and detection. There are a few reasons why these techniques are popular. First, they are scalable in a way, that extending the model to work with new models is a straightforward task that does not require any special forensic domain knowledge or training, making this problem engineering rather than a scientific problem. Second, empirical evidence shows that the accuracy of the models is growing when more train data provided, which allows taking advantage of the fact that tremendous amounts of videos and images published on the internet. There are many works where authors applied Deep Learning techniques to forensics. For example, in the paper _cite_, authors used CNNs to detect double JPEG Compression, while in _cite_, authors used CNN, to extract features and SVM classifiers on top of extracted features. The approach that we propose follow a similar path, but we had a few essential modifications: This paper organized as follows. Section II reviews camera model identification papers, then, Section III describes the algorithm used in this work. Section IV summarizes the lesson learned and experimental results.