The matching problems, such as dense stereo reconstruction or optical flow, typically uses as an underlying similarity measure between pixels the distance between patch-features surrounding the pixels. In many scenarios, for examples when high quality rectified images are available, this approach is sufficient to find reliable pixel correspondences between images. To get smooth results often a regularization in the discrete or continuous CRF framework is utilized. The research in this field has been focused on finding the most robust features, designing the best distance measure, choosing the right form of regularization and developing fast and reliable optimization methods for the corresponding optimization problem. An exhaustive overview about matching algorithms can be found in~ _cite_ and a comparison of different dissimilarity measures can be found in~ _cite_ . The proposed methods are fully generative and do not require any form of discriminative training, except of the weight of regularization, which can be hand-tuned without much effort. The main problem of such approaches occurs if the scene contains large texture-less regions. In that case each pixel matches with any other pixel and the result is determined solely by the regularization, which typically biases the solution towards a constant labelling. This causes severe problems for large planar surfaces, such as walls or a ground plane. For many datasets, this is typically resolved using special dataset-dependent priors; for example for the KITTI dataset~ _cite_ using the known height of the camera above the ground plane. To get state-of-the-art results it is necessary to over-engineer the method for each particular dataset. For an optical flow problem, this includes heuristics, solving the problem in a coarse-to-fine fashion, constraining the allowed range of disparities or flows based on matched sparse features~ _cite_ or recursive deep matching in a spatial pyramid~ _cite_ . Such approaches lead to a very large boost of performance quantitatively, however they often miss thin structures, due to the inability of the coarse-to-fine procedure to recover from incorrect label in the higher level of the pyramid. To find the right matching function, the researchers typically focus on search for the most robust feature. Such solutions are often sufficient, because the appearance of pixels in two stereo cameras or in two consecutive video frames does not change dramatically. However, this is not the case, when we try to decide, what has changed in the scene within a large interval of time (such as half a year) . Depending on the application, we might be interested in what buildings have been built or if there was the ship present in the port. The importance of temporal change detection has been recognized~ _cite_ for projects such as Google Street View with an ultimate goal of building up-to-date ND models of cities, while minimizing the costs of the updates. The problem pixel-wise temporal change detection can also be cast as a matching problem; transformation to which the matching function has to be invariant significantly increases. For example for city scenes the matching function has to allow for visual changes not only due to different lighting conditions, but also due to seasonal changes, such as the change of appearance of leaves of the tree during the year or presence of the snow on the ground. In this paper we propose a method, which learns a matching function, that automatically finds the space of allowed changes in visual appearance, such as due to the motion blur, chromatic aberrations, different colour calibration or seasonal changes. We evaluated our method on pixel-wise temporal change detection, for which we introduce a new TimeLapse change detection dataset. The dataset contains pairs of images taken at different time of the year from the same spot, and the human-labelled ground truth, determining what has changed in a scene, for example new buildings, tents, vehicles or construction sites. We also validated our method on two standard matching problems-stereo matching and optical flow on two standard datasets KITTI and Sintel~ _cite_, where we obtained results comparable to the state-of-the-art. The resulting classifier typically obtains smooth results even without any form of regularization, unlike other approaches, where this step is very crucial to remove noise and handle texture-less regions. A similar idea has been independently developed at the same time in~ _cite_, where the stereo matching cost is learnt using Convolutional Neural Networks.