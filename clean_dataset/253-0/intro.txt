Counting objects in digital images is a process that is time consuming and prone to errors due to fatigue of human annotators. The goal of this research area is to have a system that takes as input an image and returns a count of the objects inside and justification for the prediction in the form of object localization. The classical approach to counting involves fine-tuning edge detectors to segment objects from the background _cite_ and counting each one. A large challenge here is dealing with overlapping objects which require methods such as the watershed transformation _cite_ . These approaches have many hyperparameters specifically for each task and are complicated to build. The core of modern approaches was described by Lempitsky and Zisserman in N _cite_ . Given labels with point annotations of each object, they construct a density map of the image. Here, each object predicted takes up a density of N, so a sum of the density map will reveal the total number of objects in the image. This method naturally accounts for overlapping objects We extend this idea and focus on two main areas: We repose the problem of predicting a density map to instead predict a count map which contains redundant counts based on the receptive field of a smaller regression network. The regression network predicts a count of the objects that exist inside this frame as shown in Figure _ref_ . By processing the image in a fully convolutional way _cite_ each pixel is going to be accounted for some number of times, the number of windows which include it, which is the size of each window, (i.e., _inline_eq_) . To recover the true count we can take the average of all these predictions. Figure _ref_ illustrates how this change in kernel makes more sense with respect to the receptive field of the network that must make predictions. Using the Gaussian density map forces the model to predict specific values based on how far the cell is from the center of the receptive field. This is a harder task than just predicting the existence of the cell in the receptive field. A comparison of these two types of count maps is shown in Figure _ref_ . To perform this prediction we focus on a method using deep learning _cite_ and convolutional neural networks _cite_ like Xie _cite_ and Arteta _cite_ have. They utilized networks similar to FCN-N _cite_ which form bottlenecks at the core of the network to capture complex relationships in different parts of the image. Instead, we pad the borders of the input image so that the receptive field of the regression network will redundantly count the correct number of times. This way we do not bottleneck the representation in any way.