Object detection has achieved significant advances in recent years, with the framework of deep neural networks (DNN) . The current DNN detectors of state-of-the-art can be divided into two categories: (N) the two-stage approach, including _cite_, and (N) the one-stage approach, including _cite_ . In the two-stage approach, a sparse set of candidate object boxes is first generated, and then they are further classified and regressed. The two-stage methods have been achieving top performances on several challenging benchmarks, including PASCAL VOC _cite_ and MS COCO _cite_ . The one-stage approach detects objects by regular and dense sampling over locations, scales and aspect ratios. The main advantage of this is its high computational efficiency. However, its detection accuracy is usually behind that of the two-stage approach, one of the main reasons being due to the class imbalance problem _cite_ . Some recent methods in the one-stage approach aim to address the class imbalance problem, to improve the detection accuracy. Kong \etal _cite_ use the objectness prior constraint on convolutional feature maps to significantly reduce the search space of objects. Lin \etal _cite_ address the class imbalance issue by reshaping the standard cross entropy loss to focus training on a sparse set of hard examples and down-weights the loss assigned to well-classified examples. Zhang \etal _cite_ design a max-out labeling mechanism to reduce false positives resulting from class imbalance. In our opinion, the current state-of-the-art two-stage methods, \eg, Faster R-CNN _cite_, R-FCN _cite_, and FPN _cite_, have three advantages over the one-stage methods as follows: (N) using two-stage structure with sampling heuristics to handle class imbalance; (N) using two-step cascade to regress the object box parameters; (N) using two-stage features to describe the objects . In this work, we design a novel object detection framework, called RefineDet, to inherit the merits of the two approaches (\ie, one-stage and two-stage approaches) and overcome their shortcomings. It improves the architecture of the one-stage approach, by using two inter-connected modules (see Figure _ref_), namely, the anchor refinement module (ARM) and the object detection module (ODM) . Specifically, the ARM is designed to (N) identify and remove negative anchors to reduce search space for the classifier, and (N) coarsely adjust the locations and sizes of anchors to provide better initialization for the subsequent regressor. The ODM takes the refined anchors as the input from the former to further improve the regression and predict multi-class labels. As shown in Figure _ref_, these two inter-connected modules imitate the two-stage structure and thus inherit the three aforementioned advantages to produce accurate detection results with high efficiency. In addition, we design a transfer connection block (TCB) to transfer the features in the ARM to predict locations, sizes, and class labels of objects in the ODM. The multi-task loss function enables us to train the whole network in an end-to-end way. Extensive experiments on PASCAL VOC N, PASCAL VOC N, and MS COCO benchmarks demonstrate that RefineDet outperforms the state-of-the-art methods. Specifically, it achieves _inline_eq_ and _inline_eq_ mAPs on VOC N and N, with VGG-N network. Meanwhile, it outperforms the previously best published results from both one-stage and two-stage approaches by achieving _inline_eq_ AP on MS COCO {\tt test-dev} with ResNet-N. In addition, RefineDet is time efficient, \ie, it runs at _inline_eq_ FPS and _inline_eq_ FPS on a NVIDIA Titan X GPU with the input sizes _inline_eq_ and _inline_eq_ in inference. The main contributions of this work are summarized as follows. (N) We introduce a novel one-stage framework for object detection, composed of two inter-connected modules, \ie, the ARM and the ODM. This leads to performance better than the two-stage approach while maintaining high efficiency of the one-stage approach. (N) To ensure the effectiveness, we design the TCB to transfer the features in the ARM to handle more challenging tasks, \ie, predict accurate object locations, sizes and class labels, in the ODM. (N) RefineDet achieves the latest state-of-the-art results on generic object detection (\ie, PASCAL VOC N _cite_, PASCAL VOC N _cite_ and MS COCO _cite_) .