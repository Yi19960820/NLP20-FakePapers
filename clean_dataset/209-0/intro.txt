Deep convolutional neural networks _cite_ have led to a series of breakthroughs for image classification _cite_ . Deep networks naturally integrate low/mid/high-level features _cite_ and classifiers in an end-to-end multi-layer fashion, and the ``levels'' of features can be enriched by the number of stacked layers (depth) . Recent evidence _cite_ reveals that network depth is of crucial importance, and the leading results _cite_ on the challenging ImageNet dataset _cite_ all exploit ``very deep'' _cite_ models, with a depth of sixteen _cite_ to thirty _cite_ . Many other nontrivial visual recognition tasks _cite_ have also greatly benefited from very deep models. Driven by the significance of depth, a question arises: An obstacle to answering this question was the notorious problem of vanishing/exploding gradients _cite_, which hamper convergence from the beginning. This problem, however, has been largely addressed by normalized initialization _cite_ and intermediate normalization layers _cite_, which enable networks with tens of layers to start converging for stochastic gradient descent (SGD) with backpropagation _cite_ . When deeper networks are able to start converging, a problem has been exposed: with the network depth increasing, accuracy gets saturated (which might be unsurprising) and then degrades rapidly. Unexpectedly, such degradation is, and adding more layers to a suitably deep model leads to, as reported in _cite_ and thoroughly verified by our experiments. Fig.~ _ref_ shows a typical example. The degradation (of training accuracy) indicates that not all systems are similarly easy to optimize. Let us consider a shallower architecture and its deeper counterpart that adds more layers onto it. There exists a solution to the deeper model: the added layers are mapping, and the other layers are copied from the learned shallower model. The existence of this constructed solution indicates that a deeper model should produce no higher training error than its shallower counterpart. But experiments show that our current solvers on hand are unable to find solutions that are comparably good or better than the constructed solution (or unable to do so in feasible time) . In this paper, we address the degradation problem by introducing a framework. Instead of hoping each few stacked layers directly fit a desired underlying mapping, we explicitly let these layers fit a residual mapping. Formally, denoting the desired underlying mapping as _inline_eq_, we let the stacked nonlinear layers fit another mapping of _inline_eq_ . The original mapping is recast into _inline_eq_ . We hypothesize that it is easier to optimize the residual mapping than to optimize the original, unreferenced mapping. To the extreme, if an identity mapping were optimal, it would be easier to push the residual to zero than to fit an identity mapping by a stack of nonlinear layers. The formulation of _inline_eq_ can be realized by feedforward neural networks with ``shortcut connections'' (Fig.~ _ref_) . Shortcut connections _cite_ are those skipping one or more layers. In our case, the shortcut connections simply perform mapping, and their outputs are added to the outputs of the stacked layers (Fig.~ _ref_) . Identity shortcut connections add neither extra parameter nor computational complexity. The entire network can still be trained end-to-end by SGD with backpropagation, and can be easily implemented using common libraries (\eg, Caffe _cite_) without modifying the solvers. We present comprehensive experiments on ImageNet _cite_ to show the degradation problem and evaluate our method. We show that: N) Our extremely deep residual nets are easy to optimize, but the counterpart ``plain'' nets (that simply stack layers) exhibit higher training error when the depth increases; N) Our deep residual nets can easily enjoy accuracy gains from greatly increased depth, producing results substantially better than previous networks. Similar phenomena are also shown on the CIFAR-N set _cite_, suggesting that the optimization difficulties and the effects of our method are not just akin to a particular dataset. We present successfully trained models on this dataset with over N layers, and explore models with over N layers. On the ImageNet classification dataset _cite_, we obtain excellent results by extremely deep residual nets. Our N-layer residual net is the deepest network ever presented on ImageNet, while still having lower complexity than VGG nets _cite_ . Our ensemble has N top-N error on the ImageNet set, and . The extremely deep representations also have excellent generalization performance on other recognition tasks, and lead us to further in ILSVRC \& COCO N competitions. This strong evidence shows that the residual learning principle is generic, and we expect that it is applicable in other vision and non-vision problems.